version: '2'

services:

  backend:
    build: ./golang
    restart: always
    working_dir: /go/src/github.com/Di0niz/cyber-backend
    volumes:
      - ./golang/src:/go/src/github.com/Di0niz/cyber-backend   
    ports:
      - 8080:8080
#    networks:
#      vpcbr:
#        ipv4_address: 192.168.101.200

  msql1:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - ./msql1:/var/lib/mysql
    networks:
      vpcbr:
        ipv4_address: 192.168.101.11

  msql2:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - ./msql2:/var/lib/mysql
    networks:
      vpcbr:
        ipv4_address: 192.168.101.12

  ssql1:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - ./ssql1:/var/lib/mysql  
    networks:
      vpcbr:
        ipv4_address: 192.168.101.21

  ssql2:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: example
    volumes:
      - ./ssql2:/var/lib/mysql
    networks:
      vpcbr:
        ipv4_address: 192.168.101.22


  adminer:
    image: adminer
    restart: always
    ports:
      - 5050:8080
    networks:
      - vpcbr

  nodejs:
    build: ./nodejs
    restart: always
    working_dir: /app
    volumes:
      - ./nodejs/app:/app
    ports:
      - 3000:3000
      - 35729:35729
    command: yarn start
    networks:
      - vpcbr

  jenkins:
    image: jenkins:alpine
    restart: always
    ports:
      - 6000:8080
    volumes:
      - ./jenkins:/var/jenkins_home
    networks:
      - vpcbr


networks:
  vpcbr:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.101.0/16
          gateway: 192.168.101.1/16
         
         
# networks:
#   widgets:
#     driver: bridge
#     ipam:
#      config:
#        - subnet: 172.17.1.0/24
#          aux_addresses:
#           mpg1: 172.17.1.3
#           mpg2: 172.17.1.4
#           spg1: 172.17.1.5
#           spg2: 172.17.1.6
#           nodejs: 172.17.1.1
#           adminer: 172.17.1.2
# 


  #react-kickstart:
   #  image: react-kickstart
   #volumes:
   #  - ./react-kickstart:/app
   #  ports:
   #   - "3000:3000"

    #command: bash -c "npm install -g create-react-app && create-react-app redux && cd redux && npm start"
    #command: bash -c "npm install --save babel-preset-react"
    #command: bash -c "node server.js"
    #command: npm start